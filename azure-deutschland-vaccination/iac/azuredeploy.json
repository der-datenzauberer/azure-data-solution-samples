{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploy_namespace":{
            "type" : "string",
            "defaultValue" : "deuvac",
            "metadata": {
                "description": "The project is meant to get germany vaccination data by states from an API and create reports using it"
            }
        },
        "environment": {
            "type": "string",
            "defaultValue" : "dev",
            "allowedValues" : ["dev","stg","prod"]
        },

        "location" :{
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location in which the resources will get created"
            }
        },

        "datafactory_name": {
            "type": "string",
            "defaultValue" : "[concat(parameters('deploy_namespace'),'adf',parameters('environment'))]",
            "metadata": {
                "description": "Data Factory name"
            }
        },

        "storageAccountName": {
            "type": "string",
            "defaultValue" : "[concat('sta',parameters('deploy_namespace'),parameters('environment'))]",
            "metadata": {
                "description": "Storage Account Name"
            }
        },

    "serverName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploy_namespace'),'sqlsrvr',parameters('environment'))]",
      "metadata": {
        "description": "The name of the SQL logical server."
      }
    },
      "sqlDBName" : {
      "type": "string",
      "defaultValue": "[concat('sqldb-deuvac','-',parameters('environment'))]",
      "metadata": {
        "description": "The name of the SQL Database."
      }
    },

    "administratorLogin": {
      "type": "string",
      "defaultValue": "sqlAdmin",
      "metadata": {
        "description": "The administrator username of the SQL logical server."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator password of the SQL logical server."
      }
    },

    "keyVaultName":{
        "type": "string",
        "defaultValue": "[concat(parameters('deploy_namespace'),'-kv-',parameters('environment'))]",
        "metadata": {
            "description": "Name Of Key Vault"
        }
    }

    },
    "functions": [],
    "variables": {},
    "resources": [
     {
            "apiVersion": "2018-06-01",
            "name": "[parameters('datafactory_name')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.DataFactory/factories",
            "tags": {
                "resourceName": "Data Factory",
                "Environment": "[parameters('environment')]"

            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {}
        },

        {
            "name": "[parameters('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "tags": {
                "displayName": "Storage Acount"
            },
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Premium_LRS",
                "tier": "Premium"
            }
        },

        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2020-02-02-preview",
            "name": "[parameters('serverName')]",
            "location": "[parameters('location')]",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
            },
            "resources": [
            {
                "type": "databases",
                "apiVersion": "2020-08-01-preview",
                "name": "[parameters('sqlDBName')]",
                "location": "[parameters('location')]",
                "sku": {
                    "name": "Standard",
                    "tier": "Standard"
                },
                "properties":{},         
                "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', concat(parameters('serverName')))]"
                    ]
        }
        ]
    },

    {
        "name": "[parameters('keyVaultName')]",
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2016-10-01",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "[parameters('keyVaultName')]"
        },
        "properties": {
            "enabledForDeployment": true,
            "enabledForTemplateDeployment": true,
            "enabledForDiskEncryption": true,
            "tenantId": "[subscription().tenantId]",
            "accessPolicies": [
                {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[reference(parameters('datafactory_name'), '2018-06-01', 'Full').identity.principalId]",
                    "permissions": {
                        "keys": [
                            "Get"
                        ],
                        "secrets": [
                            "List",
                            "Get",
                            "Set"
                        ]
                    }
                }
            ],
            "sku": {
                "name": "standard",
                "family": "A"
            }
        }
    }

    ],

    "outputs": {
        "datafactory_name": {
            "type": "string",
            "value": "[parameters('datafactory_name')]"
        },

        "storageAccountName": {
            "type": "string",
            "value": "[parameters('storageAccountName')]"
        },

        "sql_server_name": {
            "type": "string",
            "value": "[parameters('serverName')]"
        },

        "sqldb_name": {
            "type": "string",
            "value": "[parameters('sqlDBName')]"
        },

        "keyvault_name":{
            "type": "string",
            "value": "[parameters('keyVaultName')]"
        }


    }
}